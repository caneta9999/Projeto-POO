/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ilp007proj002;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author italo7937
 */
public class TelaPartidaJokenpo extends javax.swing.JFrame {

    /**
     * Creates new form TelaPartidaJokenpo
     */
    static Pessoa[] listaParticipantes = new Pessoa[8];
    static Pessoa[] listaParticipantesRemanescentes = new Pessoa[8/2];
    static int emDisputa = 0;
    static int remanescenteAtual = 0;
    static boolean comUsuario;
    static int numUsuario;
    static int velocidade = 8;

    public TelaPartidaJokenpo() {
        initComponents();
        Jokenpo.numerorodada = 1;       
        this.getContentPane().setBackground(Cores.COR_FUNDO);
        desenharTelaRodada();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelParticipante2 = new javax.swing.JLabel();
        labelParticipante1 = new javax.swing.JLabel();
        labelVersus = new javax.swing.JLabel();
        labelRodadaPartida = new javax.swing.JLabel();
        labelEscolherJogada = new javax.swing.JLabel();
        btnDesistir = new javax.swing.JButton();
        btnPedra = new javax.swing.JButton();
        btnTesoura = new javax.swing.JButton();
        btnPapel = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        imgJogada1 = new javax.swing.JLabel();
        imgJogada2 = new javax.swing.JLabel();
        labelMensagem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        jLabel1.setText("Torneio de Jokenpo");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 54, -1, -1));

        labelParticipante2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelParticipante2.setText("Participante 2");
        getContentPane().add(labelParticipante2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, -1, -1));

        labelParticipante1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelParticipante1.setText("Participante 1");
        getContentPane().add(labelParticipante1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        labelVersus.setText("X");
        getContentPane().add(labelVersus, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, -1, -1));

        labelRodadaPartida.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        labelRodadaPartida.setText("Rodada 1");
        getContentPane().add(labelRodadaPartida, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, -1, -1));

        labelEscolherJogada.setText("Escolha sua jogada:");
        getContentPane().add(labelEscolherJogada, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 277, -1, -1));

        btnDesistir.setBackground(Cores.COR_INPUT);
        btnDesistir.setText("Desistir");
        btnDesistir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesistirActionPerformed(evt);
            }
        });
        getContentPane().add(btnDesistir, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        btnPedra.setBackground(Cores.COR_INPUT);
        btnPedra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ilp007proj002/icones/pedra.png"))); // NOI18N
        btnPedra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPedraActionPerformed(evt);
            }
        });
        getContentPane().add(btnPedra, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 299, 49, -1));

        btnTesoura.setBackground(Cores.COR_INPUT);
        btnTesoura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ilp007proj002/icones/tesoura.png"))); // NOI18N
        btnTesoura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTesouraActionPerformed(evt);
            }
        });
        getContentPane().add(btnTesoura, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 299, 49, -1));

        btnPapel.setBackground(Cores.COR_INPUT);
        btnPapel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ilp007proj002/icones/papel.png"))); // NOI18N
        btnPapel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPapelActionPerformed(evt);
            }
        });
        getContentPane().add(btnPapel, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 299, 49, -1));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(385, 302, -1, -1));

        imgJogada1.setText("1");
        getContentPane().add(imgJogada1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, -1, -1));

        imgJogada2.setText("2");
        getContentPane().add(imgJogada2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, -1, -1));

        labelMensagem.setFont(new java.awt.Font("Ubuntu", 1, 14)); // NOI18N
        labelMensagem.setText("X");
        getContentPane().add(labelMensagem, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPedraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPedraActionPerformed
        if (numUsuario == 1) {
            desenharEmbate(0, RodadaJokenpo.decidirJogada());
        } else {
            desenharEmbate(RodadaJokenpo.decidirJogada(), 0);
        }
    }//GEN-LAST:event_btnPedraActionPerformed

    private void btnTesouraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTesouraActionPerformed
        if (numUsuario == 1) {
            desenharEmbate(2, RodadaJokenpo.decidirJogada());
        } else {
            desenharEmbate(RodadaJokenpo.decidirJogada(), 2);
        }
    }//GEN-LAST:event_btnTesouraActionPerformed

    private void btnPapelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPapelActionPerformed
        if (numUsuario == 1) {
            desenharEmbate(1, RodadaJokenpo.decidirJogada());
        } else {
            desenharEmbate(RodadaJokenpo.decidirJogada(), 1);
        }
    }//GEN-LAST:event_btnPapelActionPerformed

    private void btnDesistirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesistirActionPerformed
        this.dispose();
        resetar();
        new TelaPrincipal().setVisible(true);
    }//GEN-LAST:event_btnDesistirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPartidaJokenpo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPartidaJokenpo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPartidaJokenpo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPartidaJokenpo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPartidaJokenpo().setVisible(true);
            }
        });
    }

    private void mostrarOpcoesUsuario(boolean mostrar) {
        labelEscolherJogada.setVisible(mostrar);
        btnPedra.setVisible(mostrar);
        btnPapel.setVisible(mostrar);
        btnTesoura.setVisible(mostrar);
    }
    
    private void mostrarDadosRodada(boolean mostrar) {
        labelRodadaPartida.setVisible(mostrar);
        labelParticipante1.setVisible(mostrar);
        labelVersus.setVisible(mostrar);
        labelParticipante2.setVisible(mostrar);   
        imgJogada1.setVisible(mostrar);
        imgJogada2.setVisible(mostrar);
    }

    private void ativarBotoesUsuario() {
        btnPedra.setEnabled(true);
        btnPapel.setEnabled(true);
        btnTesoura.setEnabled(true);
    }

    private void botaoEscolhido(int botao) {
        if (botao == 0) {
            btnPedra.setEnabled(false);

            btnPapel.setVisible(false);
            btnTesoura.setVisible(false);
        } else if (botao == 1) {
            btnPapel.setEnabled(false);

            btnPedra.setVisible(false);
            btnTesoura.setVisible(false);
        } else if (botao == 2) {
            btnTesoura.setEnabled(false);

            btnPedra.setVisible(false);
            btnPapel.setVisible(false);
        }
    }

    //Cores são "vermelho", "amarelo", "verde" e "cinza"
    //Direcoes são 1 (do jogador 1, virado para direita) e 2 (do jogador 2, virado para esquerda)
    private void desenharSimbolo(int jogada, String cor, int direcao) {
        String complementoCaminho = "";
        switch (jogada) {
            case 0:
                complementoCaminho = "pedra";
                break;
            case 1:
                complementoCaminho = "papel";
                break;
            case 2:
                complementoCaminho = "tesoura";
                break;
        }
        complementoCaminho += "_" + cor + "_" + Integer.toString(direcao);
        try {
            if (direcao == 1) {
                imgJogada1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ilp007proj002/icones/" + complementoCaminho + ".png")));
            } else if (direcao == 2) {
                imgJogada2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ilp007proj002/icones/" + complementoCaminho + ".png")));
            }
        } catch (Exception e) {
            System.out.println("Algo errado aconteceu durante o desenho do símbolo!\n" + e.getMessage());
        }
    }
    
    private void desenharTelaRodada() {
        mostrarDadosRodada(false);
        mostrarOpcoesUsuario(false);
        if (listaParticipantes.length == 1) {
            btnDesistir.setText("Voltar à tela inicial");
            if(listaParticipantes[0] == null){
                labelMensagem.setText("<html><body><p>O torneio acabou!</p><p>Você venceu o torneio!!!</p></body></html>");                
            }
            else{
                labelMensagem.setText("<html><body><p>O torneio acabou!</p><p>" + listaParticipantes[0].nome + " venceu o torneio!!!</p></body></html>"); 
            }
            resetar();
        } else {
            labelMensagem.setText("Iniciando a Rodada " + Integer.toString(Jokenpo.numerorodada));
            Jokenpo.rodada.iniciarRodada();
            Timer timer1 = new Timer(2000/velocidade, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent arg0) {
                    desenharTelaPartida();
                }
            });
            timer1.setRepeats(false);
            timer1.start();
        }
    }

    private void desenharTelaPartida() {
        mostrarDadosRodada(true);
        labelRodadaPartida.setText("Rodada " + Integer.toString(Jokenpo.numerorodada) 
                + " - Partida " + Integer.toString(Jokenpo.rodada.getNumPartida()));
        labelMensagem.setText("");

        comUsuario = false;
        numUsuario = 0;

        if (listaParticipantes[emDisputa] == null || listaParticipantes[emDisputa + 1] == null) {
            comUsuario = true;
            if (listaParticipantes[emDisputa] == null) {
                numUsuario = 1;
            } else {
                numUsuario = 2;
            }
        }

        mostrarOpcoesUsuario(comUsuario);
        if (comUsuario) {
            if (numUsuario == 1) {
                labelParticipante1.setText("Você");
                labelParticipante2.setText(listaParticipantes[emDisputa + 1].getNome());
            } else {
                labelParticipante1.setText(listaParticipantes[emDisputa].getNome());
                labelParticipante2.setText("Você");
            }
            ativarBotoesUsuario();
        } else {
            labelParticipante1.setText(listaParticipantes[emDisputa].getNome());
            labelParticipante2.setText(listaParticipantes[emDisputa + 1].getNome());
            Timer timer = new Timer(1500/velocidade, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent arg0) {
                    desenharEmbate(RodadaJokenpo.decidirJogada(), RodadaJokenpo.decidirJogada());
                }

            });
            timer.setRepeats(false);
            timer.start();

        }

        imgJogada1.setText("");
        imgJogada2.setText("");

    }

    private void desenharEmbate(int jogada1, int jogada2) {
        if (comUsuario) {
            if (numUsuario == 1) {
                botaoEscolhido(jogada1);
            } else if (numUsuario == 2) {
                botaoEscolhido(jogada2);
            }
        }

        Timer timer1 = new Timer(1000/velocidade, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                desenharSimbolo(jogada1, "cinza", 1);
                desenharSimbolo(jogada2, "cinza", 2);
            }

        });
        timer1.setRepeats(false);
        timer1.start();

        int vitorioso = RodadaJokenpo.decidirVitoria(jogada1, jogada2);

        Timer timer2 = new Timer(3000/velocidade, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                switch (vitorioso) {
                    case 1:
                        desenharSimbolo(jogada1, "verde", 1);
                        desenharSimbolo(jogada2, "vermelho", 2);
                        break;
                    case -1:
                        desenharSimbolo(jogada1, "vermelho", 1);
                        desenharSimbolo(jogada2, "verde", 2);
                        break;
                    case 0:
                        desenharSimbolo(jogada1, "amarelo", 1);
                        desenharSimbolo(jogada2, "amarelo", 2);
                        break;
                }
            }

        });
        timer2.setRepeats(false);
        timer2.start();

        Timer timer3 = new Timer(5000/velocidade, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                imgJogada1.setIcon(null);
                imgJogada2.setIcon(null);
                if (comUsuario) {
                    mostrarOpcoesUsuario(false);
                    if (numUsuario == 1) {
                        Jokenpo.rodada.atribuirPontos(vitorioso, numUsuario, 2);
                    } else {
                        Jokenpo.rodada.atribuirPontos(vitorioso, numUsuario, 1);
                    }
                } else {
                    Jokenpo.rodada.atribuirPontos(vitorioso);
                }
                switch (vitorioso) {
                    case 1:
                        labelMensagem.setText(labelParticipante1.getText() + " venceu!");
                        break;
                    case -1:
                        labelMensagem.setText(labelParticipante2.getText() + " venceu!");
                        break;
                    case 0:
                        labelMensagem.setText("Empate!");
                        break;
                }

            }

        });
        timer3.setRepeats(false);
        timer3.start();

        //Observação: Foi necessário usar HTML porque o JLabel não suporta quebra de linha nativamente
        Timer timer4 = new Timer(7000/velocidade, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                if (comUsuario) {
                    if (numUsuario == 1) {
                        labelMensagem.setText("<html><body>"
                                + "<p>" + labelParticipante1.getText() + ": " + Jokenpo.rodada.getUVitorias() + "</p>"
                                + "<p>" + labelParticipante2.getText() + ": " + Jokenpo.rodada.getP2Vitorias() + "</p>"
                                + "</body></html>"
                        );
                    } else {
                        labelMensagem.setText("<html><body>"
                                + "<p>" + labelParticipante1.getText() + ": " + Jokenpo.rodada.getP1Vitorias() + "</p>"
                                + "<p>" + labelParticipante2.getText() + ": " + Jokenpo.rodada.getUVitorias() + "</p>"
                                + "</body></html>"
                        );
                    }
                } else {

                    labelMensagem.setText("<html><body>"
                            + "<p>" + labelParticipante1.getText() + ": " + Jokenpo.rodada.getP1Vitorias() + "</p>"
                            + "<p>" + labelParticipante2.getText() + ": " + Jokenpo.rodada.getP2Vitorias() + "</p>"
                            + "</body></html>"
                    );
                }
            }

        });
        timer4.setRepeats(false);
        timer4.start();

        Timer timer5 = new Timer(10000/velocidade, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                if (Jokenpo.rodada.isFinalizada()) {
                    String vencedor = (Jokenpo.rodada.getVencedor() == 1) ? 
                            labelParticipante1.getText() :
                            labelParticipante2.getText();
                    
                    //Usei HTML porque o JLabel não suporta quebra de linha nativamente
                    labelMensagem.setText("<html><body>" 
                            + "<p>Rodada encerrada!</p>" 
                            + "<p>" + vencedor + " venceu a rodada!</p>"
                            + "</body></html>");
                } else {
                    labelMensagem.setText("Próxima partida...");
                }

            }

        });
        timer5.setRepeats(false);
        timer5.start();

        Timer timer6 = new Timer(12000/velocidade, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                if (Jokenpo.rodada.isFinalizada()) {
                    try {
                        try {
                    listaParticipantesRemanescentes[remanescenteAtual] = listaParticipantes[emDisputa+Jokenpo.rodada.getVencedor()-1];
                        } catch (Exception e) {
                            System.out.println("O erro foi em listaParticipantesRemanescentes[remanescenteAtual] = listaParticipantes[emDisputa+Jokenpo.rodada.getVencedor()-1];");
                            System.out.println("listaParticipantesRemanescentes[remanescenteAtual] = " + listaParticipantesRemanescentes[remanescenteAtual]);
                            System.out.println("listaParticipantes[emDisputa+Jokenpo.rodada.getVencedor()-1 = " +  listaParticipantes[emDisputa+Jokenpo.rodada.getVencedor()-1]);
                        }
                        try {
                    remanescenteAtual++;
                        } catch (Exception e) {
                            System.out.println("O erro foi em remanescenteAtual++;");
                            System.out.println("remanescenteAtual = " + remanescenteAtual);
                        }
                    emDisputa += 2;
                    if (emDisputa > listaParticipantes.length-1) {
                        listaParticipantes = listaParticipantesRemanescentes.clone();
                        listaParticipantesRemanescentes = new Pessoa[listaParticipantesRemanescentes.length/2];   
                        emDisputa = 0;
                        remanescenteAtual = 0;
                    }
                    Jokenpo.numerorodada++;
                    desenharTelaRodada();
                    } catch (Exception e) {
                        TelaPartidaJokenpo.this.dispose();
                        new TelaPrincipal().setVisible(true);
                        System.out.println("Um erro ocorreu durante a realizacao do torneio!\n" + e.getMessage());
                    }
                } else {
                    desenharTelaPartida();
                }
            }

        });
        timer6.setRepeats(false);
        timer6.start();

    }
    
    private void resetar() {
        listaParticipantes = new Pessoa[8];
        listaParticipantesRemanescentes = new Pessoa[8/2];
        emDisputa = 0;
        remanescenteAtual = 0;
        Jokenpo.rodada = new RodadaJokenpo();      
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDesistir;
    private javax.swing.JButton btnPapel;
    private javax.swing.JButton btnPedra;
    private javax.swing.JButton btnTesoura;
    private javax.swing.JLabel imgJogada1;
    private javax.swing.JLabel imgJogada2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel labelEscolherJogada;
    private javax.swing.JLabel labelMensagem;
    private javax.swing.JLabel labelParticipante1;
    private javax.swing.JLabel labelParticipante2;
    private javax.swing.JLabel labelRodadaPartida;
    private javax.swing.JLabel labelVersus;
    // End of variables declaration//GEN-END:variables
}
